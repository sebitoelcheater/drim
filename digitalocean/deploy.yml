- name: Save permissions and groups of localhost database to fixtures
  hosts: localhost
  vars:
    backup: false
  tasks:
    - name: Include vars files
      include_vars: "{{PROJECT_PATH}}/.drim/vars.yml"
- name: Set Django project with heroku
  hosts: digitalocean
  tasks:
    - name: Include vars files
      include_vars: "{{PROJECT_PATH}}/.drim/vars.yml"
    - set_fact:
        datetime: "{{ansible_date_time}}"
#    - name: Create backup folders if not exists
#      file:
#        path: "~/backups/database/{{item.database}}"
#        state: directory
#      with_items: "{{databases.postgresql}}"
#    - name: Create dump of {{item.database}} database
#      shell: "pg_dump -U {{item.database}}_admin {{item.database}} > ~/backups/database/{{item.database}}/{{datetime.iso8601}}.sql"
#      with_items: "{{databases.postgresql}}"
    - name: pull
      command: "git pull origin {{develop}}"
      args:
        chdir: "{{project_folder}}"
    - name: Install requirements
      pip:
        requirements: "{{project_folder}}/requirements.txt"
        virtualenv: "{{project_folder}}/venv"
    - name: Save local_settings
      template:
        src: "{{PROJECT_PATH}}/.drim/local_settings.py"
        dest: "{{project_root}}/local_settings.py"
    - name: collect static
      django_manage:
        command: collectstatic
        app_path: "{{ project_folder }}"
        pythonpath: "{{project_folder}}/venv/bin/python"
        virtualenv: "{{project_folder}}/venv"
    - name: migrate
      django_manage:
        command: migrate
        app_path: "{{ project_folder }}"
        pythonpath: "{{project_folder}}/venv/bin/python"
        virtualenv: "{{project_folder}}/venv"
    - name: initialize
      django_manage:
        command: initialize
        app_path: "{{ project_folder }}"
        pythonpath: "{{project_folder}}/venv/bin/python"
        virtualenv: "{{project_folder}}/venv"
      ignore_errors: true
- name: Reboot
  become: true
  hosts: digitalocean_root
  tasks:
    - name: Restart daemons, gunicorn and nginx
      shell: systemctl daemon-reload;systemctl restart gunicorn;systemctl restart nginx;
